#! /bin/bash

UPSTREAM_REPOSITORY=https://git.drupal.org/project/drupal.git
UPSTREAM_DIRECTORY=upstream
DOWNSTREAM_REPOSITORY=$(git config --get remote.origin.url)

# Allow overriding the defaults
if [ -r subtree-split.config ]
then
  source subtree-split.config
fi

help() {
  echo "Maintains a Git subtree split of the Drupal 8 core directory.

Commands:
init			Initializes the Drupal core subsplit in the $UPSTREAM_DIRECTORY
			directory
fetch			Retrieves updates from the upstream repository
push [branch|tag] ID	Publishes the Drupal core directory of a branch or tag
			identified by ID as a subtree to the downstream repository
help			Show this help text
"
}

init() {
  if [ -d $UPSTREAM_DIRECTORY ]
  then
    echo "The upstream repository is already initialized."
    return
  else
    git clone $UPSTREAM_REPOSITORY $UPSTREAM_DIRECTORY
  fi
}

fetch() {
  if [ ! -d $UPSTREAM_DIRECTORY ]
  then
    echo "The upstream repository has not been initialized."
    return
  else
    cd $UPSTREAM_DIRECTORY
    git fetch
    git prune
    git gc
    cd ..
  fi
}

push_branch() {
  if [ ! -d $UPSTREAM_DIRECTORY ]
    then
      echo "The upstream repository has not been initialized."
      return
  fi

  if [ ! $1 ]
  then
    echo 'Specify the branch to push.'
    return;
  fi

  cd $UPSTREAM_DIRECTORY

  git checkout $1
  git pull --rebase

  git subtree split -P core -b subtree-core-$1
  git push $DOWNSTREAM_REPOSITORY subtree-core-$1:$1

  # Clean up so that the next push starts from a clean repository.
  git checkout $1
  git branch -D subtree-core-$1

  # The subtree-cache seems to build up over time, so clear it.
  # rm -r .git/subtree-cache/*
  cd ..
}

push_tag() {
  if [ ! -d $UPSTREAM_DIRECTORY ]
    then
      echo "The upstream repository has not been initialized."
      return
  fi

  if [ ! $1 ]
  then
    echo 'Specify the tag to push.'
    return;
  fi

  cd $UPSTREAM_DIRECTORY

  # Because we want to apply additional commits to a tag, we cannot checkout the
  # tag directly.
  git checkout `git show-ref --hash $1`

  SUBTREE_HASH=`git subtree split -P core`

  # Delete the tag so we can recreate it for the subtree.
  git tag --delete $1
  git tag $1 $SUBTREE_HASH
  git push $DOWNSTREAM_REPOSITORY tag $1

  # Clean up so that the next push starts from a clean repository.
  git tag --delete $1

  # The subtree cache seems to build up over time, so clear it.
  rm -r .git/subtree-cache/*

  cd ..
}

# Perform the requested action.
case "$1" in
  init)
    init
    ;;

  fetch)
    fetch
    ;;

  push)
    case "$2" in 
      branch)
        push_branch $3
        ;;

      tag)
        push_tag $3
        ;;

      *)
        echo "The first argument to push must be 'branch' or 'tag'."
        exit;
    esac;
    ;;

  help)
    help
    ;;

  *)
    help
    ;;
esac
